name: build
on:
  push:
    branches: 
      - "**"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest

    steps:
    - name: setup go
      uses: actions/setup-go@v2
      with:
        go-version: 1.23.8

    - uses: extractions/setup-just@v1
      with:
        just-version: '1.40.0'

    - name: Install libpcap-dev (Linux)
      if: "matrix.os == 'ubuntu-latest'"
      run: sudo apt-get update && sudo apt-get install -y libpcap-dev

- name: Install Npcap SDK (Windows)
  if: "matrix.os == 'windows-latest'"
  run: |
    $sdkUrl = "https://npcap.com/dist/npcap-sdk-1.15.zip"
    $sdkZip = "$env:USERPROFILE\npcap-sdk.zip"
    $destDir = "$env:USERPROFILE\npcap-sdk"

    Invoke-WebRequest -Uri $sdkUrl -OutFile $sdkZip
    Expand-Archive -Path $sdkZip -DestinationPath $destDir

    Write-Host "Listing contents of $destDir:"
    Get-ChildItem -Path $destDir -Recurse

    # まず展開直後のディレクトリをすべて取得
    $dirs = Get-ChildItem -Path $destDir -Directory

    foreach ($dir in $dirs) {
      if (Test-Path "$($dir.FullName)\Lib") {
        Rename-Item -Path $dir.FullName -NewName "$destDir\wpdpack"
        break
      }
    }

    if (!(Test-Path "$destDir\wpdpack")) {
      Write-Error "Failed to locate and rename npcap sdk directory"
      exit 1
    }

    Write-Host "Npcap SDK renamed to: $destDir\wpdpack"
  shell: powershell

    - name: Set CGO flags for Npcap (Windows)
      if: "matrix.os == 'windows-latest'"
      run: |
        echo "CGO_CFLAGS=-IC:\wpdpack\Include" >> $env:GITHUB_ENV
        echo "CGO_LDFLAGS=-LC:\wpdpack\Lib" >> $env:GITHUB_ENV
      shell: powershell

    - name: checkout
      uses: actions/checkout@v4

    - name: build
      run: just build test

    - name: Convert coverage format to lcov
      if: "matrix.os == 'ubuntu-latest'"
      uses: jandelgado/gcov2lcov-action@v1.0.0
      with:
        infile: coverage.out
        outfile: coverage.lcov

    - name: coveralls
      if: "matrix.os == 'ubuntu-latest'"
      uses: coverallsapp/github-action@v1.0.1
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: coverage.lcov